====================================================
Priority Queue
====================================================
https://www.geeksforgeeks.org/priority-queue-class-in-java-2/

------------------------------------------------------
[Initialize]
//Standard initialization
PriorityQueue<Integer> pQueue = new PriorityQueue<Integer>();

//Initialization with customized comparator
//lists.size() is initial capacity, capacity grows when new items added
PriorityQueue<ListNode> queue= new PriorityQueue<ListNode>(lists.size(),new Comparator<ListNode>(){
            @Override
            public int compare(ListNode o1,ListNode o2){
                if (o1.val<o2.val)
                    return -1;
                else if (o1.val==o2.val)
                    return 0;
                else 
                    return 1;
            }
        });

Comparator<ListNode> comparator = new Comparator<ListNode>() {
			@Override
			public int compare(ListNode o1, ListNode o2) {
				if(o1.val < o2.val) return -1;
				else if(o1.val > o2.val) return 1;
				else return 0;
				
			}
		};
		
PriorityQueue<ListNode> queue = new PriorityQueue<>(lists.length, comparator);

------------------------------------------------------
[Add]
pQueue.add(10); 
pQueue.addArll(Arrays.asList({3, 2, 1}));


------------------------------------------------------
[Remove]
pQueue.poll();

------------------------------------------------------
[Check top]
pQueue.peek()

------------------------------------------------------
[Time complexity]
https://www.interviewsansar.com/what-is-time-complexity-for-offer-poll-and-peek-methods-in-priority-queue/

