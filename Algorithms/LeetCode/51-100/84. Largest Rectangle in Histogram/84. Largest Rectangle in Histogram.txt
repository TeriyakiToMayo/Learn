====================================================
Problem 84. Largest Rectangle in Histogram
====================================================
Given n non-negative integers representing the histogram's 
bar height where the width of each bar is 1, find the area 
of largest rectangle in the histogram.

SEE "1.png"
Above is a histogram where width of each bar is 1, given 
height = [2,1,5,6,2,3].

SEE "2.png"
The largest rectangle is shown in the shaded area, which 
has area = 10 unit.

Example:

Input: [2,1,5,6,2,3]
Output: 10



====================================================
Java Approach: Monotonically Increasing Stack
15 ms	83.56%
41.3 MB	52.34%
====================================================
public int largestRectangleArea(int[] heights) { 
	Stack < Integer > stack = new Stack < > ();
	stack.push(-1);
	int maxarea = 0;
	for (int i = 0; i < heights.length; ++i) {
		while (stack.peek() != -1 && heights[stack.peek()] >= heights[i]) {
			int pop = stack.pop(), peek = stack.peek();
			int testarea = heights[pop] * (i - peek - 1);
			maxarea = Math.max(maxarea, testarea);
		}
			
		stack.push(i);
	}
	
	while (stack.peek() != -1) {
		int pop = stack.pop(), peek = stack.peek();
		int testarea = heights[pop] * (heights.length - peek - 1);
		maxarea = Math.max(maxarea, testarea);
	}
	   
	return maxarea;
}
