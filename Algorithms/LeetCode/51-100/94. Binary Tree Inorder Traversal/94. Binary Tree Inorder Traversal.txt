====================================================
Problem 94. Binary Tree Inorder Traversal
====================================================
Given a binary tree, return the inorder traversal of its 
nodes' values.

Example:

Input: [1,null,2,3]
   1
    \
     2
    /
   3

Output: [1,3,2]

Follow up: Recursive solution is trivial, could you do it 
iteratively?


====================================================
Java Approach: Recursion
0 ms	100.00%
37.3 MB	5.11%
====================================================

List<Integer> output;
public List<Integer> inorderTraversal(TreeNode root) {
	output = new ArrayList<Integer>();
	if(root == null) return output;
	helper(root);

	return output;
}

public void helper(TreeNode root){
	if(root.left != null) helper(root.left);
	output.add(root.val);
	if(root.right != null) helper(root.right);
}
