====================================================
Problem 66. Plus One
====================================================
Given a non-empty array of digits representing a 
non-negative integer, plus one to the integer.

The digits are stored such that the most significant digit 
is at the head of the list, and each element in the array 
contain a single digit.

You may assume the integer does not contain any leading 
zero, except the number 0 itself.

Example 1:

Input: [1,2,3]
Output: [1,2,4]
Explanation: The array represents the integer 123.

Example 2:

Input: [4,3,2,1]
Output: [4,3,2,2]
Explanation: The array represents the integer 4321.





====================================================
Java Approach
0 ms	100.00%
41 MB	5.08%
====================================================
public static int[] plusOne(int[] digits) {
    	
	int carry = 1;
	int sum = 0;
	
	for(int i = digits.length - 1; i >= 0; i--) {
		sum = digits[i] + carry;
		if(sum <= 9) {
			digits[i] = sum;
			carry = 0;
			break;
		}else {
			digits[i] = sum%10;
			carry = 1;
		}
	}
	
	if(carry == 1) {
		int[] newDigits = new int[digits.length + 1];
		newDigits[0] = 1;
		System.arraycopy(digits, 0, newDigits, 1, digits.length);
		return newDigits;
	}
	
	return digits;
}
