====================================================
Problem 73. Set Matrix Zeroes
====================================================
Given a m x n matrix, if an element is 0, set its entire 
row and column to 0. Do it in-place.

Example 1:

Input: 
[
  [1,1,1],
  [1,0,1],
  [1,1,1]
]
Output: 
[
  [1,0,1],
  [0,0,0],
  [1,0,1]
]

Example 2:

Input: 
[
  [0,1,2,0],
  [3,4,5,2],
  [1,3,1,5]
]
Output: 
[
  [0,0,0,0],
  [0,4,5,0],
  [0,3,1,0]
]

Follow up:

    A straight forward solution using O(mn) space is 
probably a bad idea.
    A simple improvement uses O(m + n) space, but still not 
the best solution.
    Could you devise a constant space solution?


====================================================
Analysis
====================================================

Each number in the first column/row represent whether this col/row should
be set to 0. Since the (0, 0) cell represents the row0, 
we add another numberto represent col0

0(col0)
0(row0)		1(col1)		2(col2)		3(col3)		4(col4)		5(col5)

1(row1)

2(row2)

3(row3)



Step 1: check the 1st col/row, and update col0 and row0

Step 2: iterate through (1, 1) to (lenR-1, lenC-1) to update col1/row1 to colLen/rowLen

Step 3: update numbers in col1/row1 to colLen/rowLen

Step 4: update the numbers in the 1st col/row
//Notice: we need deal with the markers and the content seperately, or there will be 
//problems like updated the first column(a line of markers) to 0 then the entire matrix 
//becomes 0


====================================================
Java Approach
1 ms	100.00%
42.1 MB	96.43%
====================================================
public static void setZeroes(int[][] matrix) {
	boolean isCol = false;
	
	for(int i = 0; i < matrix.length; i++) {
		if(matrix[i][0] == 0) {
				isCol = true;
				break;
		}
	}
	
	for(int i = 0; i < matrix[0].length; i++) {
		if(matrix[0][i] == 0) {
			matrix[0][0] = 0;
			break;
		}
	}
	
	for(int i = 1; i < matrix.length; i++) {
		for(int j = 1; j < matrix[0].length; j++) {
			if(matrix[i][j] == 0) {
				matrix[i][0] = 0;
				matrix[0][j] = 0;
			}
		}
	}

	for(int i = 1; i < matrix.length; i++) {
		if(matrix[i][0] == 0) {
			for(int j = 1; j < matrix[0].length; j++) matrix[i][j] = 0;
		}
	}
	
	for(int i = 1; i < matrix[0].length; i++) {
		if((i == 0 && isCol) || (i > 0 && matrix[0][i] == 0)) {
			for(int j = 1; j < matrix.length; j++) matrix[j][i] = 0;
		}
	}
	
	if(matrix[0][0] == 0) for(int j = 0; j < matrix[0].length; j++) matrix[0][j] = 0;
	if(isCol) for(int j = 0; j < matrix.length; j++) matrix[j][0] = 0;
	
}


