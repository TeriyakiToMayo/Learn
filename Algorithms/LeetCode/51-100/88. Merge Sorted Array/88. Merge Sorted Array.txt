====================================================
Problem 88. Merge Sorted Array
====================================================
Given two sorted integer arrays nums1 and nums2, merge nums2 
into nums1 as one sorted array.

Note:

    The number of elements initialized in nums1 and nums2 
are m and n respectively.
    You may assume that nums1 has enough space (size that is 
greater or equal to m + n) to hold additional elements 
from nums2.

Example:

Input:
nums1 = [1,2,3,0,0,0], m = 3
nums2 = [2,5,6],       n = 3

Output: [1,2,2,3,5,6]


====================================================
Java Approach: Two Pointers
0 ms	100.00%
38.2 MB	5.11%
====================================================
public static void merge(int[] nums1, int m, int[] nums2, int n) {
	int[] nums1_copy = nums1.clone();
	
	int a = 0, b = 0, c = 0;
	int len1 = nums1.length;
	
	while(c < len1) {
		if(a >= m || b >= n) {
			nums1[c++] = a >= m ? nums2[b++] : nums1_copy[a++];
			continue;
		}
		nums1[c++] = nums1_copy[a] <= nums2[b] ? nums1_copy[a++] : nums2[b++];
	}
}


