====================================================
Problem 103. Binary Tree Zigzag Level Order Traversal
====================================================
Given a binary tree, return the zigzag level order traversal of 
its nodes' values. (ie, from left to right, then right to left 
for the next level and alternate between).

For example:
Given binary tree [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7

return its zigzag level order traversal as:

[
  [3],
  [20,9],
  [15,7]
]



====================================================
Java Approach: Backtracing
1 ms	98.59%
37.8 MB	5.32%
====================================================
public static List<List<Integer>> zigzagLevelOrder(TreeNode root) {
	output = new ArrayList<List<Integer>>();
	
	if(root == null) return output;
	helper(root, 1);
	return output;
}

public static void helper(TreeNode node, int depth) {
	if(output.size() < depth) {
		output.add(new ArrayList<Integer>());
	}
	
	if(depth%2 == 1) {
		output.get(depth - 1).add(node.val);
	}else {
		output.get(depth - 1).add(0, node.val);
	}
	
	
	if(node.left != null) helper(node.left, depth + 1);
	if(node.right != null) helper(node.right, depth + 1);
}
