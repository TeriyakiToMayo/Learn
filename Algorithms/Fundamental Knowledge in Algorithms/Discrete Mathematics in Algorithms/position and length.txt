//==================================================================
// Why use different calculation systems for math/physics and algorithms?
//==================================================================

In math/physics, axis is continuous, numbers are points on axis

__|________|_________|_________
  3        4         5
  |__________________|
        distance
  
Distance between 3 and 5 is: 
	5 - 3 = 2
	

In algorithms, axis is discrete, numbers are individual items

_ _ _ _ _ _
0 1 2 3 4 5
        |_|
	  distance
	  
Distance between 3 and 5 is: (amount of items from 4 to 5, boundaries are inclusive)
	5 - 3 = 2


//==================================================================
// Position and Length transform
//==================================================================

P: position
Q: position
L: is length between P and Q
D: distance between P and Q, or the items amount between P and Q
   = |P - Q| 
   = L - 1

1. Given P and L, how to calculate Q
	
	P=====Q
	 |    |
	 ------
	D = L - 1
	
	Q = P + D
	  = P + L - 1
	
2. Given Q and L, calculate P
	
	P=====Q
	|    |
	------
   D = L - 1
	
	P = Q - (L - 1)
	  = Q - D
	
3. Given P and Q, calculate L
	
	D = P - Q
	L = D + 1
	  = (P - Q) + 1
	
--------------------------------------------------------------
[Special Cases]
When P = 1, 
Q = P + D
  = 1 + D
  = 1 + L - 1 
  = L
  
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
1 2 3.........................Q

Q: position == length, last entry



When P = 0,
Q = P + L - 1 
  = 0 + L - 1 
  = L - 1

_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ -
0 1 2 3.......................Q L

E: position == length - 1, last entry
L: position == length

--------------------------------------------------------------
[Mid Point]
M = (P + Q) / 2
M = (Q - P) / 2 + P
  =  D / 2 + P


0 1 2 3 4 5 6
P     M     Q

M = (P + Q)/2 = 6/2 = 3 //notice, 3 is also the position



//==================================================================
// Cut Position
//==================================================================
Cut represented as position on right hand side

Ex.: 
Cut between -1 and 0: 0

--------------------------------------------------------------
[Mid Point]
Same as "Position and Length transform" Part

Ex. 

|_ _|_ _ _|_
 0 1 2 3 4 5

CutL = 0
CutR = 5
Cut1 = DistanceCutRCutL/2 + CutL
     = (CutR - CutL)/2 + CutL
	 = (5 - 0)/2 + 0
	 = 2
（cut is on the left of pos 2）

--------------------------------------------------------------
[Number of items on left and right]

 _ _|- _ _ _
 P         Q
|  | |      |
 --   ------
NumL   NumR

NumL = DistanceCutP
     = Cut - P
NumR = LengthCutQ
     = DistanceCutQ + 1
     = Q - Cut + 1


//==================================================================
// Loop Boundaries
//==================================================================

i < length EQUALS TO i <= length - 1

_ _ _ _ ___ _ _ _ _
        L-1 L
		   |_______|:terminate interval of i < length
		   |_______|:terminate interval of i <= length - 1
		   
--------------------------------------------------------------
[General Cases]
1. i starts before ending

i = 0, i < 4 || i <= 3
_ _ _ _ _
0 1 2 3 4
i       L


2. i starts after ending, ends immediately

i = 5, i < 4 || i <= 3
_ _ _ _ _ _
0 1 2 3 4 5
        L i
		

i = 0, i < 0
_
0
L
i



//==================================================================
// Windowed Loop Boundaries
//==================================================================

_ _ _ _ _ _ _ _ _ _ _ W _ _ _ _ -
0 1 2 3.......................N L
					  _ _ _ _ _
					   WINDOW
					   
W: last possible window initial position

W = L - window_length
