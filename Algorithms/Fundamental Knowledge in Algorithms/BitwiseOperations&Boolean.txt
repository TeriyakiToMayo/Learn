https://en.wikipedia.org/wiki/Bitwise_operation
//==================================================================
// Bitwise Operations
//==================================================================
NOT:
a	~a
1	0
0	1

AND:
a	b	a&b
1	1	1
1	0	0
0	1	0
0	0	0

*NAND:
a	b	a NAND b = ~(a&b)
1	1	0
1	0	1
0	1	1
0	0	1

OR:
a	b	a|b
1	1	1
1	0	1
0	1	1
0	0	0

*NOR:
a	b	a NOR b = ~(a|b)
1	1	0
1	0	0
0	1	0
0	0	1

XOR:
a	b	a ^ b	((a ^ b) ^ a) == b		((a ^ b) ^ b) == a		Hence XOR can be used for swaping numbers
1	1	0		1						1
1	0	1		0						1
0	1	1		1						0
0	0	0		0						1

*XNOR
a	b	a ^ b = ~(a^b)
1	1	1
1	0	0
0	1	0
0	0	1


//==================================================================
// Bitwise Operations Tricks
//==================================================================
number: the target number
bit: 2^n

---------------------------------------------------------
[Flip]
number ^ bit

---------------------------------------------------------
[Turn on]
number | bit

---------------------------------------------------------
[Turn off]
number & ~bit

y\x	0	1
0	0	0		=>		y & ~x
1	1	0

---------------------------------------------------------
[Test]
if(number & bit)

